.box1{
    .box2{
        color: red;
    }

    > .box3{
        color: red;
    }

    // 为box1设置一个hover
    // & 就表示外层的父元素
    &:hover{
        color: orange;
    }
    div &:hover{
        color: black;
    }
}

.p1{
    width: 100px;
    height: 100px;
}
// :extend() 对当前选择器扩展指定选择器的样式（选择器分组）
.p2:extend(.p1){
    color: red;
}

.p3{
    // 直接对指定的样式进行引用，这里就相当于将p1的样式在这里进行复制
    // mixin 混合
    .p1();
}

// 使用类选择器时可以在选择器后面加一个（），这时我们实际上就创建了一个mixins
.p4(){
    width: 100px;
    height: 100px;
    background-color: #bfa;
}
.p5{
    // 引用的时候（）可以不写
    // .p4; 也是正确的
    .p4();
}

// 混合函数  在混合函数中可以直接设置变量
.test(@w:100px,@h:200px,@color:green){
    width: @w;
    height: @h;
    border: solid 1px @color;
}
div{
    // 调用混合函数，按顺序传递
    // .test(200px,100px,red);
    // .test(@color:red,@w:200px,@h:100px)
    .test(200px);
}